
SSD1306.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000005e6  0000065a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000694  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f8  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001518  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000986  00000000  00000000  00001ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008e7  00000000  00000000  0000266a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002cc  00000000  00000000  00002f54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ef  00000000  00000000  00003220  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000f4c  00000000  00000000  0000370f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  0000465b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 80 01 	jmp	0x300	; 0x300 <__ctors_end>
   4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
   8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
   c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  10:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  14:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  18:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  1c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  20:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  24:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  28:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  2c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  30:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  34:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  38:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  3c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  40:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  44:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  48:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  4c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  50:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  54:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  58:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  5c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  60:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
  64:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	ae d5       	rcall	.+2908   	; 0xbc6 <__data_load_end+0x5d6>
  6a:	80 a8       	ldd	r8, Z+48	; 0x30
  6c:	1f d3       	rcall	.+1598   	; 0x6ac <__data_load_end+0xbc>
  6e:	00 40       	sbci	r16, 0x00	; 0
  70:	8d 14       	cp	r8, r13
  72:	20 01       	movw	r4, r0
  74:	a1 c8       	rjmp	.-3774   	; 0xfffff1b8 <__eeprom_end+0xff7ef1b8>
  76:	da 02       	muls	r29, r26
  78:	81 8f       	std	Z+25, r24	; 0x19
  7a:	d9 f1       	breq	.+118    	; 0xf2 <font+0x72>
  7c:	db 40       	sbci	r29, 0x0B	; 11
  7e:	a6 af       	std	Z+62, r26	; 0x3e

00000080 <font>:
  80:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
  90:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
  a0:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
  b0:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
  c0:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
  d0:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
  e0:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
  f0:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
 100:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
 110:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
 120:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
 130:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
 140:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
 150:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
 160:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
 170:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
 180:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
 190:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
 1a0:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
 1b0:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
 1c0:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
 1d0:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
 1e0:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
 1f0:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 200:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 210:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
 220:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
 230:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
 240:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
 250:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
 260:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
 270:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
 280:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
 290:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
 2a0:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
 2b0:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
 2c0:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
 2d0:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
 2e0:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
 2f0:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<

00000300 <__ctors_end>:
 300:	11 24       	eor	r1, r1
 302:	1f be       	out	0x3f, r1	; 63
 304:	cf ef       	ldi	r28, 0xFF	; 255
 306:	d4 e0       	ldi	r29, 0x04	; 4
 308:	de bf       	out	0x3e, r29	; 62
 30a:	cd bf       	out	0x3d, r28	; 61

0000030c <__do_copy_data>:
 30c:	11 e0       	ldi	r17, 0x01	; 1
 30e:	a0 e0       	ldi	r26, 0x00	; 0
 310:	b1 e0       	ldi	r27, 0x01	; 1
 312:	e6 ee       	ldi	r30, 0xE6	; 230
 314:	f5 e0       	ldi	r31, 0x05	; 5
 316:	02 c0       	rjmp	.+4      	; 0x31c <__do_copy_data+0x10>
 318:	05 90       	lpm	r0, Z+
 31a:	0d 92       	st	X+, r0
 31c:	aa 30       	cpi	r26, 0x0A	; 10
 31e:	b1 07       	cpc	r27, r17
 320:	d9 f7       	brne	.-10     	; 0x318 <__do_copy_data+0xc>
 322:	0e 94 ce 02 	call	0x59c	; 0x59c <main>
 326:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <_exit>

0000032a <__bad_interrupt>:
 32a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000032e <init_display>:
			else         plot_char(' ', line, col);
		}
		
		col++;
	}
}
 32e:	0f 93       	push	r16
 330:	1f 93       	push	r17
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	0e 94 8f 02 	call	0x51e	; 0x51e <i2c_init>
 33a:	88 e7       	ldi	r24, 0x78	; 120
 33c:	0e 94 93 02 	call	0x526	; 0x526 <i2c_start>
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 346:	c8 e6       	ldi	r28, 0x68	; 104
 348:	d0 e0       	ldi	r29, 0x00	; 0
 34a:	00 e8       	ldi	r16, 0x80	; 128
 34c:	10 e0       	ldi	r17, 0x00	; 0
 34e:	fe 01       	movw	r30, r28
 350:	84 91       	lpm	r24, Z
 352:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 356:	21 96       	adiw	r28, 0x01	; 1
 358:	c0 17       	cp	r28, r16
 35a:	d1 07       	cpc	r29, r17
 35c:	c1 f7       	brne	.-16     	; 0x34e <init_display+0x20>
 35e:	0e 94 ca 02 	call	0x594	; 0x594 <i2c_stop>
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	1f 91       	pop	r17
 368:	0f 91       	pop	r16
 36a:	08 95       	ret

0000036c <clear_display>:
 36c:	cf 93       	push	r28
 36e:	df 93       	push	r29
 370:	88 e7       	ldi	r24, 0x78	; 120
 372:	0e 94 93 02 	call	0x526	; 0x526 <i2c_start>
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 37c:	81 e2       	ldi	r24, 0x21	; 33
 37e:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 388:	8f e7       	ldi	r24, 0x7F	; 127
 38a:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 38e:	82 e2       	ldi	r24, 0x22	; 34
 390:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 39a:	87 e0       	ldi	r24, 0x07	; 7
 39c:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 3a0:	0e 94 ca 02 	call	0x594	; 0x594 <i2c_stop>
 3a4:	d0 e2       	ldi	r29, 0x20	; 32
 3a6:	88 e7       	ldi	r24, 0x78	; 120
 3a8:	0e 94 93 02 	call	0x526	; 0x526 <i2c_start>
 3ac:	80 e4       	ldi	r24, 0x40	; 64
 3ae:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 3b2:	c0 e2       	ldi	r28, 0x20	; 32
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 3ba:	c1 50       	subi	r28, 0x01	; 1
 3bc:	d9 f7       	brne	.-10     	; 0x3b4 <clear_display+0x48>
 3be:	0e 94 ca 02 	call	0x594	; 0x594 <i2c_stop>
 3c2:	d1 50       	subi	r29, 0x01	; 1
 3c4:	81 f7       	brne	.-32     	; 0x3a6 <clear_display+0x3a>
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	08 95       	ret

000003cc <set_start_line>:
 3cc:	cf 93       	push	r28
 3ce:	c8 2f       	mov	r28, r24
 3d0:	88 e7       	ldi	r24, 0x78	; 120
 3d2:	0e 94 93 02 	call	0x526	; 0x526 <i2c_start>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 3dc:	8c 2f       	mov	r24, r28
 3de:	88 0f       	add	r24, r24
 3e0:	88 0f       	add	r24, r24
 3e2:	88 0f       	add	r24, r24
 3e4:	80 5c       	subi	r24, 0xC0	; 192
 3e6:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 3ea:	0e 94 ca 02 	call	0x594	; 0x594 <i2c_stop>
 3ee:	cf 91       	pop	r28
 3f0:	08 95       	ret

000003f2 <plot_char>:
 3f2:	0f 93       	push	r16
 3f4:	1f 93       	push	r17
 3f6:	cf 93       	push	r28
 3f8:	df 93       	push	r29
 3fa:	08 2f       	mov	r16, r24
 3fc:	d6 2f       	mov	r29, r22
 3fe:	c4 2f       	mov	r28, r20
 400:	cc 0f       	add	r28, r28
 402:	4c 0f       	add	r20, r28
 404:	c4 2f       	mov	r28, r20
 406:	cc 0f       	add	r28, r28
 408:	88 e7       	ldi	r24, 0x78	; 120
 40a:	0e 94 93 02 	call	0x526	; 0x526 <i2c_start>
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 414:	81 e2       	ldi	r24, 0x21	; 33
 416:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 41a:	8c 2f       	mov	r24, r28
 41c:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 420:	85 e0       	ldi	r24, 0x05	; 5
 422:	8c 0f       	add	r24, r28
 424:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 428:	82 e2       	ldi	r24, 0x22	; 34
 42a:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 42e:	8d 2f       	mov	r24, r29
 430:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 434:	8d 2f       	mov	r24, r29
 436:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 43a:	0e 94 ca 02 	call	0x594	; 0x594 <i2c_stop>
 43e:	88 e7       	ldi	r24, 0x78	; 120
 440:	0e 94 93 02 	call	0x526	; 0x526 <i2c_start>
 444:	80 e4       	ldi	r24, 0x40	; 64
 446:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 44a:	80 2f       	mov	r24, r16
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	8c 01       	movw	r16, r24
 450:	00 0f       	add	r16, r16
 452:	11 1f       	adc	r17, r17
 454:	00 0f       	add	r16, r16
 456:	11 1f       	adc	r17, r17
 458:	08 0f       	add	r16, r24
 45a:	19 1f       	adc	r17, r25
 45c:	e8 01       	movw	r28, r16
 45e:	c0 58       	subi	r28, 0x80	; 128
 460:	df 4f       	sbci	r29, 0xFF	; 255
 462:	0b 57       	subi	r16, 0x7B	; 123
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	fe 01       	movw	r30, r28
 468:	84 91       	lpm	r24, Z
 46a:	0e 94 b8 02 	call	0x570	; 0x570 <i2c_write>
 46e:	21 96       	adiw	r28, 0x01	; 1
 470:	c0 17       	cp	r28, r16
 472:	d1 07       	cpc	r29, r17
 474:	c1 f7       	brne	.-16     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 476:	0e 94 ca 02 	call	0x594	; 0x594 <i2c_stop>
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	0f 91       	pop	r16
 482:	08 95       	ret

00000484 <plot_num_16>:

const uint16_t factors_16[5] = {1, 10, 100, 1000, 10000};

void plot_num_16(uint16_t num, uint8_t line, uint8_t col, uint8_t digits)
{
 484:	af 92       	push	r10
 486:	bf 92       	push	r11
 488:	cf 92       	push	r12
 48a:	df 92       	push	r13
 48c:	ef 92       	push	r14
 48e:	ff 92       	push	r15
 490:	0f 93       	push	r16
 492:	1f 93       	push	r17
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	7c 01       	movw	r14, r24
 49a:	06 2f       	mov	r16, r22
 49c:	d4 2f       	mov	r29, r20
	uint8_t z = 0;
	
	for (int8_t i = digits-1; i >= 0; i--)
 49e:	cf ef       	ldi	r28, 0xFF	; 255
 4a0:	c2 0f       	add	r28, r18
 4a2:	92 f1       	brmi	.+100    	; 0x508 <__stack+0x9>
 4a4:	b1 2c       	mov	r11, r1
		
		if (q)
		{
			plot_char('0' + q, line, col);
			num -= q * factors_16[i];
			z = 1;
 4a6:	aa 24       	eor	r10, r10
 4a8:	a3 94       	inc	r10
{
	uint8_t z = 0;
	
	for (int8_t i = digits-1; i >= 0; i--)
	{
		uint8_t q = num / factors_16[i];				
 4aa:	ec 2f       	mov	r30, r28
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 0b       	sbc	r31, r31
 4b0:	e0 50       	subi	r30, 0x00	; 0
 4b2:	ff 4f       	sbci	r31, 0xFF	; 255
 4b4:	c0 80       	ld	r12, Z
 4b6:	d1 80       	ldd	r13, Z+1	; 0x01
 4b8:	c7 01       	movw	r24, r14
 4ba:	b6 01       	movw	r22, r12
 4bc:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__udivmodhi4>
 4c0:	16 2f       	mov	r17, r22
		
		if (q)
 4c2:	66 23       	and	r22, r22
 4c4:	79 f0       	breq	.+30     	; 0x4e4 <plot_num_16+0x60>
		{
			plot_char('0' + q, line, col);
 4c6:	4d 2f       	mov	r20, r29
 4c8:	60 2f       	mov	r22, r16
 4ca:	80 e3       	ldi	r24, 0x30	; 48
 4cc:	81 0f       	add	r24, r17
 4ce:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <plot_char>
			num -= q * factors_16[i];
 4d2:	1c 9d       	mul	r17, r12
 4d4:	c0 01       	movw	r24, r0
 4d6:	1d 9d       	mul	r17, r13
 4d8:	90 0d       	add	r25, r0
 4da:	11 24       	eor	r1, r1
 4dc:	e8 1a       	sub	r14, r24
 4de:	f9 0a       	sbc	r15, r25
			z = 1;
 4e0:	ba 2c       	mov	r11, r10
 4e2:	0f c0       	rjmp	.+30     	; 0x502 <__stack+0x3>
		}
		else
		{
			if (z || !i) plot_char('0', line, col);
 4e4:	b1 10       	cpse	r11, r1
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <plot_num_16+0x68>
 4e8:	c1 11       	cpse	r28, r1
 4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <plot_num_16+0x74>
 4ec:	4d 2f       	mov	r20, r29
 4ee:	60 2f       	mov	r22, r16
 4f0:	80 e3       	ldi	r24, 0x30	; 48
 4f2:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <plot_char>
 4f6:	05 c0       	rjmp	.+10     	; 0x502 <__stack+0x3>
			else         plot_char(' ', line, col);
 4f8:	4d 2f       	mov	r20, r29
 4fa:	60 2f       	mov	r22, r16
 4fc:	80 e2       	ldi	r24, 0x20	; 32
 4fe:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <plot_char>
		}
		
		col++;
 502:	df 5f       	subi	r29, 0xFF	; 255
 504:	c1 50       	subi	r28, 0x01	; 1

void plot_num_16(uint16_t num, uint8_t line, uint8_t col, uint8_t digits)
{
	uint8_t z = 0;
	
	for (int8_t i = digits-1; i >= 0; i--)
 506:	8a f6       	brpl	.-94     	; 0x4aa <plot_num_16+0x26>
			else         plot_char(' ', line, col);
		}
		
		col++;
	}	
}
 508:	df 91       	pop	r29
 50a:	cf 91       	pop	r28
 50c:	1f 91       	pop	r17
 50e:	0f 91       	pop	r16
 510:	ff 90       	pop	r15
 512:	ef 90       	pop	r14
 514:	df 90       	pop	r13
 516:	cf 90       	pop	r12
 518:	bf 90       	pop	r11
 51a:	af 90       	pop	r10
 51c:	08 95       	ret

0000051e <i2c_init>:
	data[(length-1)] = i2c_read_nack();

	i2c_stop();

	return 0;
}
 51e:	80 e2       	ldi	r24, 0x20	; 32
 520:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 524:	08 95       	ret

00000526 <i2c_start>:
 526:	ec eb       	ldi	r30, 0xBC	; 188
 528:	f0 e0       	ldi	r31, 0x00	; 0
 52a:	10 82       	st	Z, r1
 52c:	94 ea       	ldi	r25, 0xA4	; 164
 52e:	90 83       	st	Z, r25
 530:	90 81       	ld	r25, Z
 532:	99 23       	and	r25, r25
 534:	ec f7       	brge	.-6      	; 0x530 <i2c_start+0xa>
 536:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 53a:	98 7f       	andi	r25, 0xF8	; 248
 53c:	98 30       	cpi	r25, 0x08	; 8
 53e:	a1 f4       	brne	.+40     	; 0x568 <i2c_start+0x42>
 540:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 544:	84 e8       	ldi	r24, 0x84	; 132
 546:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 54a:	ec eb       	ldi	r30, 0xBC	; 188
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	80 81       	ld	r24, Z
 550:	88 23       	and	r24, r24
 552:	ec f7       	brge	.-6      	; 0x54e <i2c_start+0x28>
 554:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 558:	98 7f       	andi	r25, 0xF8	; 248
 55a:	98 31       	cpi	r25, 0x18	; 24
 55c:	39 f0       	breq	.+14     	; 0x56c <i2c_start+0x46>
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	90 34       	cpi	r25, 0x40	; 64
 562:	29 f4       	brne	.+10     	; 0x56e <i2c_start+0x48>
 564:	80 e0       	ldi	r24, 0x00	; 0
 566:	08 95       	ret
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	08 95       	ret
 56c:	80 e0       	ldi	r24, 0x00	; 0
 56e:	08 95       	ret

00000570 <i2c_write>:
 570:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 574:	84 e8       	ldi	r24, 0x84	; 132
 576:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 57a:	ec eb       	ldi	r30, 0xBC	; 188
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	80 81       	ld	r24, Z
 580:	88 23       	and	r24, r24
 582:	ec f7       	brge	.-6      	; 0x57e <i2c_write+0xe>
 584:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 588:	98 7f       	andi	r25, 0xF8	; 248
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	98 32       	cpi	r25, 0x28	; 40
 58e:	09 f4       	brne	.+2      	; 0x592 <i2c_write+0x22>
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	08 95       	ret

00000594 <i2c_stop>:

void i2c_stop()
{
	// transmit STOP condition
	TWCR = 1<<TWINT | 1<<TWEN | 1<<TWSTO;
 594:	84 e9       	ldi	r24, 0x94	; 148
 596:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 59a:	08 95       	ret

0000059c <main>:
#include "graphics.h"


int main(void)
{
    init_display();
 59c:	0e 94 97 01 	call	0x32e	; 0x32e <init_display>
	clear_display();
 5a0:	0e 94 b6 01 	call	0x36c	; 0x36c <clear_display>
	set_start_line(0);
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	0e 94 e6 01 	call	0x3cc	; 0x3cc <set_start_line>
	
	plot_num_16(10, 1, 0, 4);
 5aa:	24 e0       	ldi	r18, 0x04	; 4
 5ac:	40 e0       	ldi	r20, 0x00	; 0
 5ae:	61 e0       	ldi	r22, 0x01	; 1
 5b0:	8a e0       	ldi	r24, 0x0A	; 10
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 42 02 	call	0x484	; 0x484 <plot_num_16>
 5b8:	ff cf       	rjmp	.-2      	; 0x5b8 <main+0x1c>

000005ba <__udivmodhi4>:
 5ba:	aa 1b       	sub	r26, r26
 5bc:	bb 1b       	sub	r27, r27
 5be:	51 e1       	ldi	r21, 0x11	; 17
 5c0:	07 c0       	rjmp	.+14     	; 0x5d0 <__udivmodhi4_ep>

000005c2 <__udivmodhi4_loop>:
 5c2:	aa 1f       	adc	r26, r26
 5c4:	bb 1f       	adc	r27, r27
 5c6:	a6 17       	cp	r26, r22
 5c8:	b7 07       	cpc	r27, r23
 5ca:	10 f0       	brcs	.+4      	; 0x5d0 <__udivmodhi4_ep>
 5cc:	a6 1b       	sub	r26, r22
 5ce:	b7 0b       	sbc	r27, r23

000005d0 <__udivmodhi4_ep>:
 5d0:	88 1f       	adc	r24, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	5a 95       	dec	r21
 5d6:	a9 f7       	brne	.-22     	; 0x5c2 <__udivmodhi4_loop>
 5d8:	80 95       	com	r24
 5da:	90 95       	com	r25
 5dc:	bc 01       	movw	r22, r24
 5de:	cd 01       	movw	r24, r26
 5e0:	08 95       	ret

000005e2 <_exit>:
 5e2:	f8 94       	cli

000005e4 <__stop_program>:
 5e4:	ff cf       	rjmp	.-2      	; 0x5e4 <__stop_program>
